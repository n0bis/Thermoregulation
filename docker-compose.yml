version: "3.3"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:${CONF_VER}
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - 2181:2181
    environment:
      TZ: ${TZ_SET}
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:${CONF_VER}
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      TZ: ${TZ_SET}
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-mqtt:
    image: confluentinc/cp-kafka-mqtt:${CONF_VER}
    hostname: mqtt
    container_name: mqtt
    depends_on:
      - kafka
    ports:
      - 1883:1883
    environment:
      KAFKA_MQTT_BOOTSTRAP_SERVERS: kafka:29092
      KAFKA_MQTT_CONFLUENT_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_MQTT_TOPIC_REGEX_LIST: temperature:.*

  neo4j:
    build:
      context: ./neo4j
    #image: neo4j:${NEO4J_VER}
    hostname: neo4j
    container_name: neo4j
    ports:
      - 7474:7474
      - 7687:7687
    depends_on:
      - kafka
    volumes:
      - ./neo4j/plugins:/plugins
      - ./neo4j/seed:/cyphers
    environment:
      TZ: ${TZ_SET}
      NEO4J_AUTH: ${NEO4J_AUTH}
      NEO4J_dbms_logs_debug_level: DEBUG
      NEO4J_kafka_zookeeper_connect: zookeeper:2181
      NEO4J_kafka_bootstrap_servers: kafka:29092
      #NEO4J_kafka_auto_offset_reset: earliest 
      #NEO4J_kafka_group_id: neo4j
      NEO4J_streams_sink_polling_interval: 1000  
      NEO4J_kafka_key_deserializer: org.apache.kafka.common.serialization.ByteArrayDeserializer
      NEO4J_kafka_value_deserializer: org.apache.kafka.common.serialization.ByteArrayDeserializer
      NEO4J_streams_source_enabled: "true"
      NEO4J_streams_sink_enabled: "true"
      NEO4J_streams_source_topic_nodes_temperature: Temperature{temperatureID,value,time,truckID}
      NEO4J_streams_source_topic_relationships_tracked: TRUCK{truckID}
      NEO4J_streams_sink_topic_cypher_temperature: "
        MATCH (t:Truck)
          WHERE t.truckID = event.truckID
        MERGE (temp: Temperature {temperatureID: event.temperatureID})
          ON CREATE SET temp.value = event.value,
                        temp.truckID = event.truckID,
                        temp.time = localdatetime()
        MERGE (temp)-[:TRACKED]->(t)
        "

  kowl:
    image: quay.io/cloudhut/kowl:master
    ports:
      - 8088:8080
    hostname: kowl
    container_name: kowl
    environment:
      KAFKA_BROKERS: kafka:29092
    restart: always
    depends_on:
      - kafka