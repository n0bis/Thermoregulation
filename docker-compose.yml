version: "3.3"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:${CONF_VER}
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - 2181:2181
    environment:
      TZ: ${TZ_SET}
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:${CONF_VER}
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      TZ: ${TZ_SET}
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-mqtt:
    image: confluentinc/cp-kafka-mqtt:${CONF_VER}
    hostname: mqtt
    container_name: mqtt
    depends_on:
      - kafka
    ports:
      - 1883:1883
    environment:
      KAFKA_MQTT_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:9092
      KAFKA_MQTT_CONFLUENT_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_MQTT_TOPIC_REGEX_LIST: temperature:.*

  neo4j:
    image: neo4j:${NEO4J_VER}
    hostname: neo4j
    container_name: neo4j
    ports:
      - 7474:7474
      - 7687:7687
    depends_on:
      - kafka
    volumes:
      - ./plugins:/plugins
    environment:
      TZ: ${TZ_SET}
      NEO4J_AUTH: ${NEO4J_AUTH}
      NEO4J_dbms_logs_debug_level: DEBUG
      NEO4J_kafka_zookeeper_connect: zookeeper:2181
      NEO4J_kafka_bootstrap_servers: kafka:9092
      NEO4J_kafka_auto_offset_reset: earliest 
      #NEO4J_kafka_group_id: neo4j
      NEO4J_streams_sink_topic_cypher_temperature:  "CREATE (p:Person{name: event.name, title: event.title})"
      NEO4J_streams_sink_polling_interval: 1000  
      NEO4J_streams_sink_enable: "true" 
      NEO4J_streams_procedures_enable: "true"

  kowl:
    image: quay.io/cloudhut/kowl:master
    ports:
      - 8088:8080
    hostname: kowl
    container_name: kowl
    environment:
      KAFKA_BROKERS: kafka:9092
    restart: always
    depends_on:
      - kafka